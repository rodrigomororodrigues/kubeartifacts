---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: storage-class-mysqlapirodrigomoro-deployment
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-mysqlapirodrigomoro
spec:
  capacity:
    storage: 10Gi  # Adjust based on your needs
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: storage-class-mysqlapirodrigomoro-deployment
  local:
    path: /mnt/data/mysqlapirodrigomoro  # Adjust this to your node's local storage path
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - your-node-name  # Replace with your target node's name
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-mysqlapirodrigomoro
  namespace: apimysqlapplication
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: storage-class-mysqlapirodrigomoro-deployment
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-application-deployment
  namespace: apimysqlapplication
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-application
  template:
    metadata:
      labels:
        app: mysql-application
    spec:
      containers:
      - name: mysql-application-container
        image: rodrigomoro/mysqlapirodrigomoro:latest  # Replace with your MySQL image
        ports:
        - containerPort: 3306
        env:
        # Define other environment variables as needed
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: pvc-mysqlapirodrigomoro
